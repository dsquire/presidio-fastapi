# Example environment configuration file
# Copy to .env and adjust settings for your environment

# NLP Engine Configuration
NLP_ENGINE_NAME=spacy
SPACY_MODEL_EN=en_core_web_lg
SPACY_MODEL_ES=es_core_news_lg  # Optional: For Spanish language support

# API Configuration
API_VERSION=v1  # API version prefix, e.g., /api/v1/
MAX_TEXT_LENGTH=102400  # Maximum text length for analysis
MIN_CONFIDENCE_SCORE=0.5  # Minimum confidence score for PII detection

# Server Configuration
SERVER_HOST=0.0.0.0  # IP address to bind the server (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
SERVER_PORT=8000  # Port number the server will listen on

# Security Settings
# CORS Allowed Origins - comma-separated list of allowed origins
# Examples:
# Development: ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000
# Production: ALLOWED_ORIGINS=https://app.example.com,https://admin.example.com
# NOTE: Using "*" is not recommended for production environments
ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com

# Rate Limiting Settings
REQUESTS_PER_MINUTE=60  # Number of requests allowed per IP per minute
BURST_LIMIT=100  # Maximum burst of requests allowed
BLOCK_DURATION=300  # Duration in seconds to block IPs that exceed limits

# Prometheus Configuration
PROMETHEUS_MONITORED_PATHS=analyze,analyze/batch  # Comma-separated path suffixes to monitor

# OpenTelemetry Configuration
OTLP_ENDPOINT=http://localhost:4317  # OpenTelemetry collector endpoint
OTLP_SECURE=false  # Whether to use TLS for OTLP exporter

# Logging Configuration
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, or CRITICAL

# Optional: Analyzer Configuration
MIN_CONFIDENCE_SCORE=0.5  # Minimum confidence score for PII detection
CONTEXT_SIMILARITY_THRESHOLD=0.65  # Similarity threshold for context matching (0.0-1.0)
CONTEXT_MAX_DISTANCE=10  # Maximum number of words to look for context

# Note: Entity mapping is configured in app/config.py
# If you need to customize the mapping between spaCy and Presidio entities,
# update the ENTITY_MAPPING dictionary in the Settings class
